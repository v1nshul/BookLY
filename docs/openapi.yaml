openapi: 3.0.0
info:
  title: BookLY API
  description: API for managing books and reviews in the BookLY application
  version: 1.0.0
servers:
  - url: https://radiusironic-historyharlem-3000.codio-box.uk
    description: Production server
paths:
  /login:
    post:
      summary: Authenticate user and issue JWT token
      tags:
        - Authentication
      security:
        - BasicAuth: [] 
      responses:
        '200':
          description: Successful login, returns JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  message:
                    type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/home/books:
    get:
      summary: Get all books for the authenticated user
      tags:
        - Books
      security:
        - BearerAuth: [] # Requires JWT
      responses:
        '200':
          description: List of books retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add a new book to the database
      tags:
        - Books
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBook'
      responses:
        '201':
          description: Book added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  bookID:
                    type: integer
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/home/books/search:
    get:
      summary: Search books by title or author
      tags:
        - Books
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: Search term for title or author
      responses:
        '200':
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BookSearchResult'
        '400':
          description: Search query missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/home/books/add:
    post:
      summary: Add a book to the user's list
      tags:
        - Books
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
              required:
                - title
                - author
      responses:
        '201':
          description: Book added to user's list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  bookID:
                    type: integer
        '400':
          description: Missing title or author
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Book already in user's list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/home/books/remove:
    delete:
      summary: Remove a book from the user's list
      tags:
        - Books
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
              required:
                - title
                - author
      responses:
        '200':
          description: Book removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Missing title or author
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/home/books/reviews:
    post:
      summary: Add a review for a book
      tags:
        - Reviews
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReview'
      responses:
        '201':
          description: Review added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  reviewID:
                    type: integer
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get reviews for a specific book
      tags:
        - Reviews
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: book_id
          schema:
            type: integer
          required: true
          description: ID of the book to fetch reviews for
      responses:
        '200':
          description: Reviews retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
        '400':
          description: Missing book_id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/home/private:
    get:
      summary: Get private user information
      tags:
        - User
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User info retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/home/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
              required:
                - username
                - password
                - email
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
      required:
        - id
        - title
        - author
    BookSearchResult:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
      required:
        - title
        - author
    NewBook:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        userID:
          type: integer
      required:
        - title
        - author
    Review:
      type: object
      properties:
        id:
          type: integer
        book_id:
          type: integer
        user_id:
          type: integer
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - book_id
        - user_id
        - rating
        - created_at
    NewReview:
      type: object
      properties:
        book_id:
          type: integer
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
      required:
        - book_id
        - rating
    Error:
      type: object
      properties:
        error:
          type: string
      required:
        - error
security: 
  - {}